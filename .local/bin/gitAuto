#!/bin/bash

gitauto() {
    if [[ -z $addfiles ]]; then addfiles="$($prg ls-files -m)"; fi
    if [[ -z $commitmsg ]]; then commitmsg="$(date)"; else commitmsg="$commitmsg $(date)"; fi
	echo "Added:" $addfiles
	echo "Commit msg:" $commitmsg
	sleep 2
	$prg add $addfiles
	$prg commit -m "$commitmsg"
	$prg push origin
	printf "\e[1;32m\n\nPending files \n\n\e[0m"
	printf "\e[1;35m"
	$prg ls-files -m
}

usage() {
    printf "\nAutomated script to manage your git repos\n\
It commits the changes and push them to Github.com\n\n\
OPTIONS:\n\t-g  ->  git repo\n\t-d  ->  dotfiles repo\n\
\t-a  ->  files to repo\n\t-c  ->  commit message\n\
USAGE:\n\tgitAuto [type] [Args] \"filename1 filename2\"\e[0m\n\
EXAMPLES:\n\tgitAuto -g (or) gitAuto -g -c \"[commit msg]\" -a \"add files\"\t#for normal git repo\n\
\tgitAuto -d (or) gitAuto -d -c \"[commit msg]\" -a \"add files\"\t#for dotfiles repo" 1>&2;
    exit 1>&2; }

while getopts ":gda:c:" o; do
    case "${o}" in
        a)
            addfiles=${OPTARG}
            ;;
        c)
            commitmsg=${OPTARG}
            ;;
        g)
            prg="git"
            ;;
        d)
            prg="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
            ;;
        ?)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -n "${a}" ] || [ -n "${c}" ] || [ -z "${prg}" ]; then
    usage
fi
gitauto
